% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_model_batch_data.R
\name{getExperiment}
\alias{getExperiment}
\title{For a given  model.id, it will return a data.fram
containing all data stored in experiment slot}
\usage{
getExperiment(object, model.id = NULL, batchName = NULL, expDig = NULL,
  treatment.only = FALSE, max.time = NULL, vol.normal = FALSE,
  return.list = FALSE, impute.value = FALSE, concurrent.time = FALSE)
}
\arguments{
\item{object}{The \code{XevaSet}}

\item{model.id}{The \code{model.id} for which data is required, multipal allowed}

\item{batchName}{batch name from the Xeva set}

\item{expDig}{Experiment design}

\item{treatment.only}{Default \code{FALSE}. If TRUE give data only for non-zero dose periode (if dose data avalible)}

\item{max.time}{maximum time for data}

\item{return.list}{default \code{FALSE} will return a datafram}

\item{impute.value}{default \code{FALSE}. If TRUE will impute the values}

\item{concurrent.time}{default \code{FALSE}. If TRUE will cut the batch data such that control and treatment will end at same time point}
}
\value{
a \code{data.fram} will all the the values stored in experiment slot
}
\description{
For a given  model.id, it will return a data.fram
containing all data stored in experiment slot
}
\examples{
data(pdxe)
getExperiment(pdxe, model.id="X.6047.uned", treatment.only=TRUE)
getExperiment(pdxe, model.id=c("X.6047.uned", "X.6047.pael"), treatment.only=TRUE)
getExperiment(pdxe, batchName="X-6047.paclitaxel", treatment.only=TRUE)
expDesign <- list(batch.name="myBatch", treatment=c("X.050.LE11","X.050.LE11.evus"), control=c("X.050.uned"))
getExperiment(pdxe, expDig=expDesign)

}
